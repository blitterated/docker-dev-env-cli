#!/usr/bin/env bash

set -e

source ${DDE_WORKDIR}/share/containers.sh

help_exec() {
  echo "
Command: exec
Usage:
  exec image_name your command string goes here"
  exit 1
}

# Make sure there is an image name supplied
[ ! -n "$1" ] && help_exec

IMAGE_NAME=$1
shift

# Make sure there is a command to run supplied
[ ! -n "$1" ] && help_exec

CID_FILE="${CID_DIR}/${IMAGE_NAME}"

ensure_container_exists

read CID < "$CID_FILE"

ensure_container_running

ADD_COMMAND_PATH='export PATH=/command:${PATH}'

read -d XXX EXEC_JSON <<EOJS
{
  "AttachStdin": false,
  "AttachStdout": true,
  "AttachStderr": true,
  "DetachKeys": "ctrl-p,ctrl-q",
  "Tty": false,
  "Cmd": [
    "bash",
    "-c",
    "${ADD_COMMAND_PATH}; $@"
  ]
}XXX
EOJS

MIN_EXEC_JSON=$(echo "$EXEC_JSON" | jq -c)

EXEC_ID=$(curl -sS -XPOST --unix-socket /var/run/docker.sock \
               -d "${MIN_EXEC_JSON}" \
               -H "Content-Type: application/json" \
               "http://localhost/containers/${CID}/exec" | jq -r ".Id")

curl -sS -XPOST --output - \
     --unix-socket /var/run/docker.sock \
     -d '{"Detach": false, "Tty": false}' \
     -H "Content-Type: application/json" \
     "http://localhost/exec/${EXEC_ID}/start" | \
     iconv -f ISO-8859-1 -t UTF-8 | \
     tr -cd "[:print:][:space:]"
