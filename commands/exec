#!/usr/bin/env bash

set -e

help_exec() {
  echo "
Command: exec
Usage:
  exec your command string goes here"
  exit 1
}

[ ! -n "$1" ] && help_exec

# check that the ID exists and that the container is running
if [[ ! -f "$DDE_CONTAINER_ID_FILE" ]]; then
  echo "No DDE container running"
  exit 1

  # TODO: need to test if container exists and is running. https://yaroslavgrebnov.com/blog/bash-docker-check-container-existence-and-status/
fi

ADD_COMMAND_PATH='export PATH=/command:${PATH}'

read -d XXX EXEC_JSON <<EOJS
{
  "AttachStdin": false,
  "AttachStdout": true,
  "AttachStderr": true,
  "DetachKeys": "ctrl-p,ctrl-q",
  "Tty": false,
  "Cmd": [
    "bash",
    "-c",
    "${ADD_COMMAND_PATH}; $@"
  ]
}XXX
EOJS

read DDE_CONTAINER_ID < "$DDE_CONTAINER_ID_FILE"

EXEC_ID=$(curl -s -XPOST --unix-socket /var/run/docker.sock \
               -d "${EXEC_JSON}" \
               -H "Content-Type: application/json" \
                "http://localhost/containers/${DDE_CONTAINER_ID}/exec" | jq -r ".Id")

curl -s -XPOST --output - \
     --unix-socket /var/run/docker.sock \
     -d '{"Detach": false, "Tty": false}' \
     -H "Content-Type: application/json" \
     "http://localhost/exec/${EXEC_ID}/start"
